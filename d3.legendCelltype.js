
(function() {
d3.legendCelltype = function(g) {
  g.each(function() {
    var g= d3.select(this),
        items = {},
        svg = d3.select(g.property("nearestViewportElement")),
        legendPadding = g.attr("data-style-padding") || 5,
        //lb = g.selectAll(".legend-box").data([true]),
        li = g.selectAll(".legend-items").data([true])

    //lb.enter().append("rect").classed("legend-box",true)
    li.enter().append("g").classed("legend-items",true)

    svg.selectAll("[data-legendCelltype]").each(function() {
        var self = d3.select(this)
        items[self.attr("data-legendCelltype")] = {
          pos : self.attr("data-legend-pos") || this.getBBox().y,
          color : self.attr("data-legend-color") != undefined ? self.attr("data-legend-color") : self.style("fill") != 'none' ? self.style("fill") : self.style("stroke") 
        }
      })

    items = d3.entries(items).sort(function(a,b) { return a.value.pos-b.value.pos})

    let myMap_3 = new Map()
        myMap_3.set("1",  "Neural crest (PNS glia)")
        myMap_3.set("2",  "Neural crest (PNS neurons)")
        myMap_3.set("3",  "Olfactory sensory neurons")
        myMap_3.set("4",  "Neural crest")
        myMap_3.set("5",  "Mesencephalon/MHB")
        myMap_3.set("6",  "Di/telencephalon")
        myMap_3.set("7",  "Retinal neurons")
        myMap_3.set("8",  "Retinal pigment cells")
        myMap_3.set("9",  "Retinal primordium")
        myMap_3.set("10", "Forebrain/midbrain")
        myMap_3.set("11", "Noradrenergic neurons")
        myMap_3.set("12", "Motor neurons")
        myMap_3.set("13", "Intermediate progenitor cells")
        myMap_3.set("14", "Inhibitory interneurons")
        myMap_3.set("15", "Di/mesencephalon inhibitory neurons")
        myMap_3.set("16", "Spinal cord inhibitory neurons")
        myMap_3.set("17", "Di/mesencephalon excitatory neurons")
        myMap_3.set("18", "Spinal cord excitatory neurons")
        myMap_3.set("19", "Neuron progenitor cells")
        myMap_3.set("20", "Hindbrain")
        myMap_3.set("21", "Roof plate")
        myMap_3.set("22", "Anterior floor plate")
        myMap_3.set("23", "Posterior floor plate")
        myMap_3.set("24", "Spinal cord")
        myMap_3.set("25", "Spinal cord (dorsal)")
        myMap_3.set("26", "Spinal cord (ventral)")
        myMap_3.set("27", "Rostral neuroectoderm")
        myMap_3.set("28", "Epiblast")
        myMap_3.set("29", "Caudal neuroectoderm")
        myMap_3.set("30", "Neuromesodermal progenitors")
        myMap_3.set("31", "Caudal lateral epiblast")
        myMap_3.set("32", "Otic epithelium")
        myMap_3.set("33", "Olfactory epithelium")
        myMap_3.set("34", "Placodal area")
        myMap_3.set("35", "Branchial arch epithelium")
        myMap_3.set("36", "Fusing epithelium")
        myMap_3.set("37", "Apical ectodermal ridge")
        myMap_3.set("38", "Epidermis")
        myMap_3.set("39", "Pre-epidermal keratinocytes")
        myMap_3.set("40", "Surface ectoderm")
        myMap_3.set("41", "Primitive streak & adjacent ectoderm")
        myMap_3.set("42", "Primordial germ cells")
        myMap_3.set("43", "Foregut epithelium")
        myMap_3.set("44", "Midgut/Hindgut epithelium")
        myMap_3.set("45", "Lung epithelium")
        myMap_3.set("46", "Pancreatic epithelium")
        myMap_3.set("47", "Gut & lung epithelium")
        myMap_3.set("48", "Hepatocytes")
        myMap_3.set("49", "Gut")
        myMap_3.set("50", "Definitive endoderm")
        myMap_3.set("51", "Anterior primitive streak")
        myMap_3.set("52", "Notochord")
        myMap_3.set("53", "Osteoblast progenitors A")
        myMap_3.set("54", "Osteoblast progenitors B")
        myMap_3.set("55", "Myocytes")
        myMap_3.set("56", "Skeletal muscle progenitors")
        myMap_3.set("57", "Early chondrocytes")
        myMap_3.set("58", "Chondrocyte & osteoblast progenitors")
        myMap_3.set("59", "Paraxial mesoderm A")
        myMap_3.set("60", "Paraxial mesoderm B")
        myMap_3.set("61", "Paraxial mesoderm C")
        myMap_3.set("62", "Nascent mesoderm")
        myMap_3.set("63", "Intermediate mesoderm")
        myMap_3.set("64", "Renal epithelium")
        myMap_3.set("65", "Mesenchymal stromal cells")
        myMap_3.set("66", "Somatic mesoderm")
        myMap_3.set("67", "Connective tissue progenitors")
        myMap_3.set("68", "Limb mesenchyme progenitors")
        myMap_3.set("69", "Cardiomyocytes")
        myMap_3.set("70", "First heart field")
        myMap_3.set("71", "Second heart field")
        myMap_3.set("72", "Splanchnic mesoderm")
        myMap_3.set("73", "Amniochorionic mesoderm A")
        myMap_3.set("74", "Amniochorionic mesoderm B")
        myMap_3.set("75", "Amniochorionic mesoderm")
        myMap_3.set("76", "Extraembryonic mesoderm")
        myMap_3.set("77", "Allantois")
        myMap_3.set("78", "Mixed mesoderm")
        myMap_3.set("79", "Brain endothelium")
        myMap_3.set("80", "Liver endothelium")
        myMap_3.set("81", "Endothelium")
        myMap_3.set("82", "Hematoendothelial progenitors")
        myMap_3.set("83", "Blood progenitors")
        myMap_3.set("84", "White blood cells")
        myMap_3.set("85", "Megakaryocytes")
        myMap_3.set("86", "Primitive erythroid cells")
        myMap_3.set("87", "Definitive erythroid cells")
        myMap_3.set("88", "Embryonic visceral endoderm")
        myMap_3.set("89", "Extraembryonic visceral endoderm")
        myMap_3.set("90", "Visceral endoderm")
        myMap_3.set("91", "Parietal endoderm")
        myMap_3.set("92", "Hypoblast")
        myMap_3.set("93", "Inner cell mass")
        myMap_3.set("94", "Morula")
        myMap_3.set("95", "Trophectoderm")
        myMap_3.set("96", "Extraembryonic ectoderm")

    li.selectAll("text")
        .data(items,function(d) { return d.key})
        .call(function(d) { d.enter().append("text")})
        .call(function(d) { d.exit().remove()})
        .attr("y",function(d,i) { return i*1.501+"em"})
        .attr("x","1em")
        //.text(function(d) { return d.key})
        .text(function(d) { return myMap_3.get(d.key)})
    
  
    
    // Reposition and resize the box
   // var lbbox = li[0][0].getBBox()  
    //lb.attr("x",(lbbox.x-legendPadding))
    //    .attr("y",(lbbox.y-legendPadding))
    //    .attr("height",(lbbox.height+2*legendPadding))
     //   .attr("width",(lbbox.width+2*legendPadding))
  })
  return g
}
})()